/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Persistencia.*;
import javax.swing.table.DefaultTableModel;
import Entidades.*;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author lucio
 */
public class Salas extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo= new DefaultTableModel();
    SalaData salaD = new SalaData();


    /**
     * Creates new form Sala
     */
    public Salas() {
        initComponents();
        cabecera();
        jtId.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtNroSalas = new javax.swing.JTextField();
        jtCapacidad = new javax.swing.JTextField();
        jrbHabilitado = new javax.swing.JRadioButton();
        jcApta3D = new javax.swing.JCheckBox();
        jrbInhabilitado = new javax.swing.JRadioButton();
        jbCrear = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtSalas = new javax.swing.JTable();
        jbMostrar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jtId = new javax.swing.JTextField();

        jRadioButton2.setText("jRadioButton2");

        jButton4.setText("Buscar Sala");

        jLabel6.setText("jLabel6");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Salas");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nro de Sala:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Capacidad:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Apta para 3D:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Estado:");

        jrbHabilitado.setText("Habilitada");
        jrbHabilitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbHabilitadoActionPerformed(evt);
            }
        });

        jcApta3D.setText("Apta");
        jcApta3D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcApta3DActionPerformed(evt);
            }
        });

        jrbInhabilitado.setText("Inhabilitada");
        jrbInhabilitado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbInhabilitadoActionPerformed(evt);
            }
        });

        jbCrear.setText("Crear Sala");
        jbCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCrearActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar Sala");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar Sala");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbBorrar.setText("Borrar Sala");
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jtSalas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtSalas);

        jbMostrar.setText("Mostrar Salas");
        jbMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMostrarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Id:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbCrear)
                                    .addComponent(jbBuscar)
                                    .addComponent(jbModificar)
                                    .addComponent(jbBorrar))
                                .addGap(138, 138, 138)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcApta3D)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jrbHabilitado)
                                        .addGap(18, 18, 18)
                                        .addComponent(jrbInhabilitado))
                                    .addComponent(jtNroSalas, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                    .addComponent(jtCapacidad)
                                    .addComponent(jtId)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(jbMostrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNroSalas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCrear))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcApta3D)
                    .addComponent(jbModificar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrbHabilitado)
                    .addComponent(jrbInhabilitado)
                    .addComponent(jbBorrar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jbMostrar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSalir)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbHabilitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbHabilitadoActionPerformed
        // TODO add your handling code here:
        if (jrbHabilitado.isSelected()) {
            
            jrbInhabilitado.setSelected(false);
        }
    }//GEN-LAST:event_jrbHabilitadoActionPerformed

    private void jrbInhabilitadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbInhabilitadoActionPerformed
        // TODO add your handling code here:
        if (jrbInhabilitado.isSelected()) {
            
            jrbHabilitado.setSelected(false);
        }
    }//GEN-LAST:event_jrbInhabilitadoActionPerformed

    private void jcApta3DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcApta3DActionPerformed
        // TODO add your handling code here:
        if (jcApta3D.isSelected()) {
            
            jcApta3D.setText("Es Apta para 3D");
            
        } else {
            
            jcApta3D.setText("No es Apta para 3D");
        }
    }//GEN-LAST:event_jcApta3DActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        
        dispose ();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMostrarActionPerformed
        // TODO add your handling code here:
        cargarS ();
    }//GEN-LAST:event_jbMostrarActionPerformed

    private void jbCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCrearActionPerformed
        // TODO add your handling code here:
        agregarSala();
        limpiarCampos();
        jcApta3D.setText("Apta");
        cargarS ();
    }//GEN-LAST:event_jbCrearActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        String id = jtId.getText();
        
         if (id.isEmpty()) {
            
            jtId.setEditable(true);
            JOptionPane.showMessageDialog(this, "Ingrese el Id de Sala que desee modificar");
        } else {
             
            buscarSala(); 
            limpiarCampos();
            jtId.setEditable(false);
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        // TODO add your handling code here:
        String nro = jtId.getText();
        
        jtId.setEditable(true);
        
         if (nro.isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "Ingrese el Id de Sala que desee modificar");
        } else {
             
            modificarSala();
            limpiarCampos();
            cargarS ();
            jtId.setEditable(false);    
        }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        // TODO add your handling code here:
        
        String nro = jtId.getText();
        
        jtId.setEditable(true);
        
         if (nro.isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "Ingrese el Id de Sala que desee modificar");
        } else {
             
            borrarSala();
            limpiarCampos();
            cargarS ();
            jtId.setEditable(false);    
        }
    }//GEN-LAST:event_jbBorrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCrear;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbMostrar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JCheckBox jcApta3D;
    private javax.swing.JRadioButton jrbHabilitado;
    private javax.swing.JRadioButton jrbInhabilitado;
    private javax.swing.JTextField jtCapacidad;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtNroSalas;
    private javax.swing.JTable jtSalas;
    // End of variables declaration//GEN-END:variables

    
    private void cabecera(){
        
        modelo.addColumn("Id de Sala");
        modelo.addColumn("Numero de Sala");
        modelo.addColumn("Capacidad");
        modelo.addColumn("Apta 3D");
        modelo.addColumn("Estado"); 
        jtSalas.setModel(modelo);
    }
    
    private void agregarSala(){
        
        int nroSala;
        int capacidad;
        boolean apta;
        String estado = "";
        
        if (jtNroSalas.getText().isEmpty() || jtCapacidad.getText().isEmpty() || (!jrbHabilitado.isSelected() && !jrbInhabilitado.isSelected())) {
            
            JOptionPane.showMessageDialog(this, "Todos los Campos son obligatorio");
        } else {
            
            try {
                nroSala = Integer.parseInt(jtNroSalas.getText());
                capacidad = Integer.parseInt(jtCapacidad.getText());
                apta = jcApta3D.isSelected();
        
                if (jrbHabilitado.isSelected() == true) {
            
                    estado = "Habilitado";
                } else {
            
                    if (jrbInhabilitado.isSelected() == true) {
                
                        estado = "Inhabilitado";
                    } else {
                
                        JOptionPane.showMessageDialog(this, "Es necesario elegir un estado");
                    }
                }
            
                Sala sal = new Sala(0 , nroSala, apta, capacidad, estado);
            
                salaD.crearSala(sal);
            
                } catch (NumberFormatException x){
                
                    JOptionPane.showMessageDialog(this, "Numero de Formato Incorrecto.");
                    return;               
                }
            }
        }
    
    private void buscarSala(){
                
        modelo.setRowCount(0);
        
        int nro;
        String apta = "";
        
        try {
  
            nro = Integer.parseInt(jtId.getText());
            
            if (salaD.buscarSala(nro) != null) {
               
                Sala s = salaD.buscarSala(nro);
              
                if (s.isApta3D() == true) {
                
                    apta = "Es apta";
                } else {
                
                    apta= "No es Apta";
                }   
            
                if (s != null) {
                
                    modelo.addRow(new Object []{
                    
                        s.getIdSala(),
                        s.getNroSala(),
                        s.getCapacidad(),
                        apta,
                        s.getEstado()
                    });
                }
            } else {
                
                JOptionPane.showMessageDialog(this, "No se encontro el Numero de sala indicado");
            }
        
        } catch (NumberFormatException e){
            
            JOptionPane.showMessageDialog(this, "El numero de sala debe ser un numero entero.");
            return;
        }   
    }
    
    private void modificarSala(){
        
        int id;
        
        try{
            id = Integer.parseInt(jtId.getText());            
            int nro = Integer.parseInt(jtNroSalas.getText());
            int cap = Integer.parseInt(jtCapacidad.getText());
            boolean apta = jcApta3D.isSelected();
            String estado = "";
            
            if (jrbHabilitado.isSelected() == true) {
            
                    estado = "Habilitado";
                } else {
            
                    if (jrbInhabilitado.isSelected() == true) {
                
                        estado = "Inhabilitado";
                    } else {
                
                        JOptionPane.showMessageDialog(this, "Es necesario elegir un estado");
                    }
                }
            
            if (salaD.buscarSala(id) != null) {
                
                Sala sal2 = new Sala(id, nro, apta, cap, estado);
                
                int confirmar = JOptionPane.showConfirmDialog(this, "¿Esta Seguro de Modificar la Sala de ID: " + jtId.getText() + "?" , 
                        " Confirmar Actualizacion:", JOptionPane.YES_NO_OPTION);
        
                if (confirmar == JOptionPane.YES_OPTION) {
                
                    salaD.modificarSala(sal2);           
                }
            } else {
                
                JOptionPane.showMessageDialog(this, "No se encontro el ID indicado.");
            }
                    
        } catch (NumberFormatException x){
            
            JOptionPane.showMessageDialog(this, "El ID debe ser un numero entero.");
            return;
        }
    }
    
    private void borrarSala(){
        
        int id;
        
        try {
            
            id = Integer.parseInt(jtId.getText());
            
            if (salaD.buscarSala(id) != null) {
                
                int confirmar = JOptionPane.showConfirmDialog(this, "¿Estas seguro de eliminar la sala: " +jtId.getText() + "?" ,
                        " Confirmar el Borrado: ", JOptionPane.YES_NO_OPTION);
                
                if (confirmar == JOptionPane.YES_OPTION) {
                    
                    salaD.borrarSala(id);
                }          
            }
        } catch (NumberFormatException e){
            
            JOptionPane.showMessageDialog(this, "El ID debe ser un numero entero.");   
            return;
        }
    }
    
    private void cargarS (){
            
        List <Sala> lista = salaD.listarSala();
        modelo.setRowCount(0);
        String apta;
        

        for (Sala s: lista) {
            
            if (s.isApta3D() == true) {
                
                apta = "Es apta";
            } else {
                
                apta= "No es Apta";
            }    
            modelo.addRow(new Object []{
                
                s.getIdSala(),
                s.getNroSala(),
                s.getCapacidad(),
                apta,
                s.getEstado()
               
            });
        }
    }
     private void limpiarCampos(){
         
        jtId.setText("");
        jtNroSalas.setText("");
        jtCapacidad.setText("");
        jcApta3D.setSelected(false);
        jrbHabilitado.setSelected(false);
        jrbInhabilitado.setSelected(false);
    }
}
